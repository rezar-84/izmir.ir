<?php

function izmir_preprocess_html(&$variables)
{
  $variables['#attached']['library'][] = 'izmir/izmir.skin.default';
}

/**
* Implements hook_preprocess_node() for NODE document templates.
*/
function izmir_preprocess_node(&$variables) {
  // Allowed view modes
  $view_mode = $variables['view_mode']; // Retrieve view mode
  $allowed_view_modes = ['full']; // Array of allowed view modes (for performance so as to not execute on unneeded nodes)

  // If view mode is in allowed view modes list, pass to THEME_add_regions_to_node()
  if(in_array($view_mode, $allowed_view_modes)) {
    // Allowed regions (for performance so as to not execute for unneeded region)
    $allowed_regions = ['listing_sidebar'];
    izmir_add_regions_to_node($allowed_regions, $variables);
  }
}

/**
* izmir_add_regions_to_node
*/

function izmir_add_regions_to_node($allowed_regions, &$variables) {
  // Retrieve active theme
  $theme = \Drupal::theme()->getActiveTheme()->getName();

  // Retrieve theme regions
  $available_regions = system_region_list($theme, 'REGIONS_ALL');

  // Validate allowed regions with available regions
  $regions = array_intersect(array_keys($available_regions), $allowed_regions);

  // For each region
  foreach ($regions as $key => $region) {

	 // Load region blocks
	 $blocks = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties(['theme' => $theme, 'region' => $region]);

	 // Sort â€˜em
	 uasort($blocks, 'Drupal\block\Entity\Block::sort');

	 // Capture viewable blocks and their settings to $build
	 $build = array();
	 foreach ($blocks as $key => $block) {
		if ($block->access('view')) {
		  $builder = \Drupal::entityTypeManager()->getViewBuilder('block');
		  $build[$key] = $builder->view($block, 'block');
		}
	 }

	 // Add build to region
	 $variables[$region] = $build;
  }
}


/**
* Implements hook_form_alter().
*
* @param $form
* @param \Drupal\Core\Form\FormStateInterface $form_state
* @param $form_id
*/
function izmir_webform_submission_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if ($form_id > 0) {
    $node = \Drupal::routeMatch()->getParameter('node');
    if (!empty($node) && $node instanceof \Drupal\node\NodeInterface) {
      if ($node->bundle() == 'tour') {
      $nid = $node->id();
      // Prepopulate with parent node ID and disable the selection:
      $form['elements']['submitted_tour']['#default_value'] = $nid;
      $form['elements']['submitted_tour']['#attributes']['disabled'] = 'disabled';
      }
    }
  }
}
